{
  "version": "3.0.0",
  "description": "ChittyMCP Chain Workflow Definitions",
  "rate_limits": {
    "requests_per_minute": 60,
    "concurrent_chains": 5
  },
  "chains": {
    "executive-decision": {
      "name": "executive-decision",
      "description": "Strategic decision-making workflow with performance analysis and risk assessment",
      "version": "1.0.0",
      "tools": [
        "analyze_performance",
        "risk_assessment",
        "make_executive_decision",
        "strategic_planning",
        "delegate_task"
      ],
      "parameters": {
        "required": ["context", "decision_type"],
        "optional": ["stakeholders", "timeline", "budget"]
      },
      "output": {
        "decision": "string",
        "rationale": "string",
        "action_items": "array",
        "risk_assessment": "object"
      },
      "steps": [
        {
          "step": 1,
          "tool": "analyze_performance",
          "description": "Analyze current performance metrics",
          "input": {
            "context": "{{context}}",
            "metrics": ["revenue", "efficiency", "customer_satisfaction"]
          }
        },
        {
          "step": 2,
          "tool": "risk_assessment",
          "description": "Assess risks for each option",
          "input": {
            "context": "{{context}}",
            "options": "{{options}}"
          }
        },
        {
          "step": 3,
          "tool": "make_executive_decision",
          "description": "Make the strategic decision",
          "input": {
            "context": "{{context}}",
            "performance": "{{step1.output}}",
            "risks": "{{step2.output}}",
            "decision_type": "{{decision_type}}"
          }
        },
        {
          "step": 4,
          "tool": "strategic_planning",
          "description": "Create implementation plan",
          "input": {
            "decision": "{{step3.output}}",
            "timeline": "{{timeline}}",
            "stakeholders": "{{stakeholders}}"
          }
        },
        {
          "step": 5,
          "tool": "delegate_task",
          "description": "Delegate action items",
          "input": {
            "plan": "{{step4.output}}",
            "action_items": "{{step3.output.action_items}}"
          }
        }
      ]
    },
    "legal-workflow": {
      "name": "legal-workflow",
      "description": "Complete legal case management workflow from intake to processing",
      "version": "1.0.0",
      "tools": [
        "generate_chitty_id",
        "create_legal_case",
        "analyze_document",
        "process_payment",
        "compliance_check",
        "search_cases",
        "execute_workflow"
      ],
      "parameters": {
        "required": ["case_type", "documents", "client_id"],
        "optional": ["deadline", "jurisdiction", "priority"]
      },
      "output": {
        "case_id": "string",
        "chitty_ids": "array",
        "compliance_status": "object",
        "workflow_state": "string"
      },
      "steps": [
        {
          "step": 1,
          "tool": "generate_chitty_id",
          "description": "Generate ChittyIDs for case entities",
          "input": {
            "entity_type": "PEO",
            "metadata": {
              "case_type": "{{case_type}}",
              "client_id": "{{client_id}}"
            }
          }
        },
        {
          "step": 2,
          "tool": "create_legal_case",
          "description": "Create legal case record",
          "input": {
            "case_id": "{{step1.output.id}}",
            "case_type": "{{case_type}}",
            "jurisdiction": "{{jurisdiction}}",
            "documents": "{{documents}}"
          }
        },
        {
          "step": 3,
          "tool": "analyze_document",
          "description": "Analyze legal documents",
          "input": {
            "documents": "{{documents}}",
            "case_id": "{{step1.output.id}}"
          }
        },
        {
          "step": 4,
          "tool": "compliance_check",
          "description": "Validate compliance requirements",
          "input": {
            "case_id": "{{step1.output.id}}",
            "jurisdiction": "{{jurisdiction}}"
          }
        },
        {
          "step": 5,
          "tool": "execute_workflow",
          "description": "Execute case workflow",
          "input": {
            "case_id": "{{step1.output.id}}",
            "workflow_type": "case_intake",
            "priority": "{{priority}}"
          }
        }
      ]
    },
    "infrastructure-deploy": {
      "name": "infrastructure-deploy",
      "description": "Cloudflare infrastructure deployment and management",
      "version": "1.0.0",
      "tools": [
        "deploy_worker",
        "manage_kv_namespace",
        "manage_r2_bucket",
        "execute_d1_query"
      ],
      "parameters": {
        "required": ["worker_name", "environment"],
        "optional": ["kv_namespaces", "r2_buckets", "d1_databases"]
      },
      "output": {
        "deployment_id": "string",
        "worker_url": "string",
        "resources": "object",
        "status": "string"
      },
      "steps": [
        {
          "step": 1,
          "tool": "deploy_worker",
          "description": "Deploy Cloudflare Worker",
          "input": {
            "worker_name": "{{worker_name}}",
            "environment": "{{environment}}",
            "script": "{{worker_script}}"
          }
        },
        {
          "step": 2,
          "tool": "manage_kv_namespace",
          "description": "Create/update KV namespaces",
          "input": {
            "namespaces": "{{kv_namespaces}}",
            "worker_name": "{{worker_name}}"
          }
        },
        {
          "step": 3,
          "tool": "manage_r2_bucket",
          "description": "Create/update R2 buckets",
          "input": {
            "buckets": "{{r2_buckets}}",
            "worker_name": "{{worker_name}}"
          }
        },
        {
          "step": 4,
          "tool": "execute_d1_query",
          "description": "Initialize D1 databases",
          "input": {
            "databases": "{{d1_databases}}",
            "queries": ["CREATE TABLE IF NOT EXISTS ..."]
          }
        }
      ]
    },
    "cross-sync": {
      "name": "cross-sync",
      "description": "Device and state synchronization across platforms",
      "version": "1.0.0",
      "tools": [
        "register_mcp_server",
        "sync_mcp_state",
        "get_synced_servers"
      ],
      "parameters": {
        "required": ["device_id", "sync_type"],
        "optional": ["state_data", "conflict_resolution"]
      },
      "output": {
        "sync_status": "string",
        "server_count": "number",
        "last_sync": "timestamp",
        "conflicts": "array"
      },
      "steps": [
        {
          "step": 1,
          "tool": "register_mcp_server",
          "description": "Register device for sync",
          "input": {
            "device_id": "{{device_id}}",
            "server_url": "{{server_url}}",
            "capabilities": ["tools", "resources"]
          }
        },
        {
          "step": 2,
          "tool": "sync_mcp_state",
          "description": "Sync state across devices",
          "input": {
            "device_id": "{{device_id}}",
            "state_data": "{{state_data}}",
            "sync_type": "{{sync_type}}",
            "conflict_resolution": "{{conflict_resolution}}"
          }
        },
        {
          "step": 3,
          "tool": "get_synced_servers",
          "description": "Verify sync status",
          "input": {
            "device_id": "{{device_id}}"
          }
        }
      ]
    },
    "full-orchestration": {
      "name": "full-orchestration",
      "description": "Complete orchestration workflow combining all tool domains",
      "version": "1.0.0",
      "tools": [
        "analyze_performance",
        "risk_assessment",
        "make_executive_decision",
        "strategic_planning",
        "delegate_task",
        "generate_chitty_id",
        "create_legal_case",
        "analyze_document",
        "process_payment",
        "compliance_check",
        "search_cases",
        "execute_workflow",
        "deploy_worker",
        "manage_kv_namespace",
        "manage_r2_bucket",
        "execute_d1_query",
        "register_mcp_server",
        "sync_mcp_state",
        "get_synced_servers"
      ],
      "parameters": {
        "required": ["orchestration_type", "context"],
        "optional": ["rollback_enabled", "parallel_execution", "timeout"]
      },
      "output": {
        "orchestration_id": "string",
        "execution_plan": "object",
        "results": "array",
        "summary": "object"
      },
      "steps": []
    }
  }
}
